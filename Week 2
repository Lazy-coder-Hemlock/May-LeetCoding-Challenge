#check if it is a straight Line

class Solution:
    def checkStraightLine(self, coordinates: List[List[int]]) -> bool:
        if len(coordinates)==2:
            return 1
        x0,y0=coordinates[0]
        x1,y1=coordinates[1]
        for i in range(2,len(coordinates)):
            x,y=coordinates[i]
            if (y1-y0)*(x-x0)!=(x1-x0)*(y-y0):
                return 0
        return 1


#Valid perfect square
#define ll long 
class Solution {
public:
    bool isPerfectSquare(int num) {
        ll low=0;
        ll high=num;
        while(low<=high){
            ll mid=low+(high-low)/2;
            ll curr_square=mid*mid;
            if(curr_square==num)
                return 1;
            else if (curr_square<num)
                low=mid+1;
            else
                high=mid-1;
        }
        return 0;
    }
};


#Find the town Judge

class Solution:
    def findJudge(self, N: int, trust: List[List[int]]) -> int:
        if len(trust)<N-1:
            return -1
        inward=[0]*(N+1)
        outward=[0]*(N+1)
        for k,v in trust:
            inward[v]+=1
            outward[k]+=1
        for i in range(1,N+1):
            if inward[i]==N-1 and outward[i]==0:
                return i
        return -1
        
